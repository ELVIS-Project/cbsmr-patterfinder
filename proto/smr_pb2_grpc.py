# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import smr_pb2 as smr__pb2


class IndexStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.IndexNotes = channel.unary_unary(
        '/proto.Index/IndexNotes',
        request_serializer=smr__pb2.IndexRequest.SerializeToString,
        response_deserializer=smr__pb2.Notes.FromString,
        )
    self.IndexMeasures = channel.unary_unary(
        '/proto.Index/IndexMeasures',
        request_serializer=smr__pb2.IndexRequest.SerializeToString,
        response_deserializer=smr__pb2.Measures.FromString,
        )
    self.IndexVectorsCsv = channel.unary_unary(
        '/proto.Index/IndexVectorsCsv',
        request_serializer=smr__pb2.IndexRequest.SerializeToString,
        response_deserializer=smr__pb2.VectorsCsv.FromString,
        )


class IndexServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def IndexNotes(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IndexMeasures(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IndexVectorsCsv(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_IndexServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'IndexNotes': grpc.unary_unary_rpc_method_handler(
          servicer.IndexNotes,
          request_deserializer=smr__pb2.IndexRequest.FromString,
          response_serializer=smr__pb2.Notes.SerializeToString,
      ),
      'IndexMeasures': grpc.unary_unary_rpc_method_handler(
          servicer.IndexMeasures,
          request_deserializer=smr__pb2.IndexRequest.FromString,
          response_serializer=smr__pb2.Measures.SerializeToString,
      ),
      'IndexVectorsCsv': grpc.unary_unary_rpc_method_handler(
          servicer.IndexVectorsCsv,
          request_deserializer=smr__pb2.IndexRequest.FromString,
          response_serializer=smr__pb2.VectorsCsv.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto.Index', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class SmrStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Search = channel.unary_unary(
        '/proto.Smr/Search',
        request_serializer=smr__pb2.Notes.SerializeToString,
        response_deserializer=smr__pb2.Occurrences.FromString,
        )
    self.AddPiece = channel.unary_unary(
        '/proto.Smr/AddPiece',
        request_serializer=smr__pb2.AddPieceRequest.SerializeToString,
        response_deserializer=smr__pb2.AddPieceResponse.FromString,
        )


class SmrServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Search(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddPiece(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SmrServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Search': grpc.unary_unary_rpc_method_handler(
          servicer.Search,
          request_deserializer=smr__pb2.Notes.FromString,
          response_serializer=smr__pb2.Occurrences.SerializeToString,
      ),
      'AddPiece': grpc.unary_unary_rpc_method_handler(
          servicer.AddPiece,
          request_deserializer=smr__pb2.AddPieceRequest.FromString,
          response_serializer=smr__pb2.AddPieceResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto.Smr', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
